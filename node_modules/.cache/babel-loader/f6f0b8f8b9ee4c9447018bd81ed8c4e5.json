{"ast":null,"code":"import _slicedToArray from\"C:/project/React-Redux-Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{useHistory}from\"react-router\";import{toast}from\"react-toastify\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddPost=function AddPost(_ref){var contacts=_ref.contacts,addContact=_ref.addContact;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),phone=_useState6[0],setPhone=_useState6[1];var history=useHistory();var handleSubmit=function handleSubmit(e){e.preventDefault();var checkContactEmailExists=contacts.filter(function(contact){return contact.email===email?contact:null;});var checkContactPhoneExists=contacts.filter(function(contact){return contact.phone===phone?contact:null;});if(!email||!name||!phone){return toast.warning(\"Please fill in all fields!!\");}if(checkContactEmailExists.length>0){return toast.error(\"This email already exists!!\");}if(checkContactPhoneExists.length>0){return toast.error(\"This phone number already exists!!\");}var data={id:contacts.length>0?contacts[contacts.length-1].id+1:0,email:email,name:name,phone:phone};addContact(data);toast.success(\"Contact added successfully!!\");history.push(\"/\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center text-primary py-3 display-4\",children:\"Add Members For Team Project\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 p-5 mx-auto shadow\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"Full name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"email\",placeholder:\"Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"number\",placeholder:\"Phone\",value:phone,onChange:function onChange(e){return setPhone(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-block btn-primary\",type:\"submit\",value:\"Add Student\"})})]})})})]});};var mapStateToProps=function mapStateToProps(state){return{contacts:state};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addContact:function addContact(data){dispatch({type:\"ADD_CONTACT\",payload:data});}};};export default connect(mapStateToProps,mapDispatchToProps)(AddPost);","map":{"version":3,"sources":["C:/project/React-Redux-Contact-Book/src/components/AddContact/index.js"],"names":["React","useState","connect","useHistory","toast","AddPost","contacts","addContact","name","setName","email","setEmail","phone","setPhone","history","handleSubmit","e","preventDefault","checkContactEmailExists","filter","contact","checkContactPhoneExists","warning","length","error","data","id","success","push","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddPost = ({ contacts, addContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkContactEmailExists = contacts.filter((contact) =>\r\n      contact.email === email ? contact : null\r\n    );\r\n    const checkContactPhoneExists = contacts.filter((contact) =>\r\n      contact.phone === phone ? contact : null\r\n    );\r\n\r\n    if (!email || !name || !phone) {\r\n      return toast.warning(\"Please fill in all fields!!\");\r\n    }\r\n    if (checkContactEmailExists.length > 0) {\r\n      return toast.error(\"This email already exists!!\");\r\n    }\r\n    if (checkContactPhoneExists.length > 0) {\r\n      return toast.error(\"This phone number already exists!!\");\r\n    }\r\n\r\n    const data = {\r\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\r\n      email,\r\n      name,\r\n      phone,\r\n    };\r\n\r\n    addContact(data);\r\n    toast.success(\"Contact added successfully!!\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <h1 className=\"text-center text-primary py-3 display-4\">Add Members For Team Project</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Full name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                placeholder=\"Phone\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"btn btn-block btn-primary\"\r\n                type=\"submit\"\r\n                value=\"Add Student\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (data) => {\r\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\n"]},"metadata":{},"sourceType":"module"}