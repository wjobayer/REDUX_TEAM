{"ast":null,"code":"import _slicedToArray from \"C:/project/React-Redux-Contact-Book/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\project\\\\React-Redux-Contact-Book\\\\src\\\\components\\\\EditContact\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar EditContact = function EditContact(_ref) {\n  _s();\n\n  var contacts = _ref.contacts,\n      updateContact = _ref.updateContact;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var history = useHistory();\n  var currentContact = contacts.find(function (contact) {\n    return contact.id === parseInt(id);\n  });\n  useEffect(function () {\n    setName(currentContact.name);\n    setEmail(currentContact.email);\n    setPhone(currentContact.phone);\n  }, [currentContact]);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var checkContactEmailExists = contacts.filter(function (contact) {\n      return contact.email === email && contact.id !== currentContact.id ? contact : null;\n    });\n    var checkContactPhoneExists = contacts.filter(function (contact) {\n      return contact.phone === phone && contact.id !== currentContact.id ? contact : null;\n    });\n\n    if (!email || !name || !phone) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n\n    var data = {\n      id: currentContact.id,\n      email: email,\n      name: name,\n      phone: phone\n    };\n    updateContact(data);\n    toast.success(\"Contact updated successfully!!\");\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark ml-auto my-5\",\n        onClick: function onClick() {\n          return history.push(\"/\");\n        },\n        children: \"Go back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 mx-auto shadow p-5\",\n        children: currentContact ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              value: name,\n              placeholder: \"Name\",\n              onChange: function onChange(e) {\n                return setName(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              value: email,\n              placeholder: \"Email\",\n              onChange: function onChange(e) {\n                return setEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              value: phone,\n              placeholder: \"Phone\",\n              onChange: function onChange(e) {\n                return setPhone(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group d-flex align-items-center justify-content-between my-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Update Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: function onClick() {\n                return history.push(\"/\");\n              },\n              children: \"cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"No Contact Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EditContact, \"Rq2bgl4YoqOoSAOOGiNAFwpIqmA=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditContact;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contacts: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateContact: function updateContact(data) {\n      dispatch({\n        type: \"UPDATE_CONTACT\",\n        payload: data\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"sources":["C:/project/React-Redux-Contact-Book/src/components/EditContact/index.js"],"names":["React","useEffect","useState","connect","useHistory","useParams","toast","EditContact","contacts","updateContact","id","history","currentContact","find","contact","parseInt","setName","name","setEmail","email","setPhone","phone","handleSubmit","e","preventDefault","checkContactEmailExists","filter","checkContactPhoneExists","warning","length","error","data","success","push","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst EditContact = ({ contacts, updateContact }) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const currentContact = contacts.find(\r\n    (contact) => contact.id === parseInt(id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setName(currentContact.name);\r\n    setEmail(currentContact.email);\r\n    setPhone(currentContact.phone);\r\n  }, [currentContact]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkContactEmailExists = contacts.filter((contact) =>\r\n      contact.email === email && contact.id !== currentContact.id\r\n        ? contact\r\n        : null\r\n    );\r\n    const checkContactPhoneExists = contacts.filter((contact) =>\r\n      contact.phone === phone && contact.id !== currentContact.id\r\n        ? contact\r\n        : null\r\n    );\r\n\r\n    if (!email || !name || !phone) {\r\n      return toast.warning(\"Please fill in all fields!!\");\r\n    }\r\n    if (checkContactEmailExists.length > 0) {\r\n      return toast.error(\"This email already exists!!\");\r\n    }\r\n    if (checkContactPhoneExists.length > 0) {\r\n      return toast.error(\"This phone number already exists!!\");\r\n    }\r\n\r\n    const data = {\r\n      id: currentContact.id,\r\n      email,\r\n      name,\r\n      phone,\r\n    };\r\n\r\n    updateContact(data);\r\n    toast.success(\"Contact updated successfully!!\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex flex-column\">\r\n        <button\r\n          className=\"btn btn-dark ml-auto my-5\"\r\n          onClick={() => history.push(\"/\")}\r\n        >\r\n          Go back\r\n        </button>\r\n        <div className=\"col-md-6 mx-auto shadow p-5\">\r\n          {currentContact ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={name}\r\n                  placeholder={\"Name\"}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={email}\r\n                  placeholder={\"Email\"}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={phone}\r\n                  placeholder={\"Phone\"}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Update Contact\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => history.push(\"/\")}\r\n                >\r\n                  cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <h1 className=\"text-center\">No Contact Found</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateContact: (data) => {\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\r\n"]},"metadata":{},"sourceType":"module"}